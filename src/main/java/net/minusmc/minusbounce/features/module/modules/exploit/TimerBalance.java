/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.minusmc.minusbounce.features.module.modules.exploit;

import net.minecraft.client.gui.ScaledResolution;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minusmc.minusbounce.event.*;
import net.minusmc.minusbounce.features.module.Module;
import net.minusmc.minusbounce.features.module.ModuleCategory;
import net.minusmc.minusbounce.features.module.ModuleInfo;
import net.minusmc.minusbounce.utils.*;
import net.minusmc.minusbounce.value.BoolValue;
import org.jetbrains.annotations.NotNull;

import java.util.ArrayList;
import java.util.List;
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;

@ModuleInfo(name = "TimerBalance", description = "Timer Balance.", category = ModuleCategory.EXPLOIT)
public class TimerBalance extends Module {

    private Queue<Packet> packets = new ConcurrentLinkedQueue<>();
    private long balance = 0L, last = 0L;
    private boolean shouldIgnoreC0F;

    public void onDisable() {
        balance = 0;
        last = 0;
        shouldIgnoreC0F = false;

        if (mc.thePlayer != null && mc.thePlayer.ticksExisted > 50) {
            packets.forEach(PacketUtils::sendPacketNoEvent);
            packets.clear();
        }
    }

    @EventTarget
    public void onPacket(PacketEvent event) {
        if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
            if (shouldIgnoreC0F) {
                event.cancelEvent();
                packets.add(event.getPacket());
            } else {
                if (!packets.isEmpty()) {
                    event.cancelEvent();
                    packets.add(event.getPacket());

                    PacketUtils.sendPacketNoEvent(packets.poll());
                }
            }
        }

        if (event.getPacket() instanceof C03PacketPlayer) {
            C03PacketPlayer wrapper = (C03PacketPlayer) event.getPacket();
            if (last == 0L) {
                last = System.currentTimeMillis();
                return;
            }

            if (!wrapper.isMoving() && !wrapper.getRotating()) {
                event.cancelEvent();
            }

            shouldIgnoreC0F = event.isCancelled();
            if (shouldIgnoreC0F) {
                balance -= 50;
                return;
            }

            balance += 50;
            balance -= System.currentTimeMillis() - last;

            last = System.currentTimeMillis();
        }
    }

    @EventTarget
    public void onUpdate(UpdateEvent event) {
        if (mc.thePlayer.ticksExisted % 20 == 0)
            ClientUtils.INSTANCE.displayChatMessage("Balance: " + balance);
    }

    @EventTarget(priority = 2)
    public void onTick(TickEvent event) {
        if (balance >= 49) {
            mc.timer.timerSpeed = 1.0F;
        }
    }

}